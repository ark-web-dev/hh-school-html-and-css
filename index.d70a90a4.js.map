{"mappings":"A,2D","sources":["<anon>","js/slider.js"],"sourcesContent":["class Slider {\n    constructor(slider, autoplay = true, autoplayDelay = 5000){\n        // элемент div.slider\n        this.slider = slider;\n        // все кадры (слайды)\n        this.allFrames = slider.querySelectorAll(\".slider__item\");\n        // цепочка кадров\n        this.frameChain = slider.querySelector(\".slider__slides\");\n        this.index = 0; // индекс кадра, который сейчас в окне просмотра\n        this.length = this.allFrames.length; // сколько всего есть кадров\n        this.autoplay = autoplay; // включить автоматическую прокрутку?\n        this.autoplayDelay = autoplayDelay;\n        this.paused = null; // чтобы можно было выключать автопрокрутку\n        this.init(); // инициализация слайдера\n    }\n    init() {\n        this.dotButtons = this.dots(); // создать индикатор текущего кадра\n        // все кадры должны быть одной ширины, равной ширине окна просмотра;\n        // если кадров три, то ширина каждого кадра будет 100/3 = 33.33333%\n        // от ширины контейнера .slider__slides, то есть 900 пикселей\n        this.allFrames.forEach((frame)=>frame.style.width = 100 / this.length + \"%\");\n        // ширина цепочки кадров должна равна ширине всех кадров, то есть\n        // 900*3 = 2700 пикселей; но удобнее задать в процентах от родителя,\n        // если кадров три, то ширина контейнера кадров будет 100*3 = 300%\n        this.frameChain.style.width = 100 * this.length + \"%\";\n        // клики по кнопкам индикатора текущего кадра\n        this.dotButtons.forEach((dot)=>{\n            dot.addEventListener(\"click\", (event)=>{\n                event.preventDefault();\n                const index = this.dotButtons.indexOf(event.target);\n                if (index === this.index) return;\n                this.goto(index);\n            });\n        });\n        if (this.autoplay) {\n            // включить автоматическую прокрутку?\n            this.play();\n            // когда мышь над слайдером — останавливаем автоматическую прокрутку\n            this.slider.addEventListener(\"mouseenter\", ()=>clearInterval(this.paused));\n            // когда мышь покидает пределы слайдера — опять запускаем прокрутку\n            this.slider.addEventListener(\"mouseleave\", ()=>this.play());\n        }\n    }\n    // перейти к кадру с индексом index\n    goto(index) {\n        // изменить текущий индекс...\n        if (index > this.length - 1) this.index = 0;\n        else if (index < 0) this.index = this.length - 1;\n        else this.index = index;\n        // ...и выполнить смещение\n        this.move();\n    }\n    // перейти к следующему кадру\n    next() {\n        this.goto(this.index + 1);\n    }\n    // перейти к предыдущему кадру\n    prev() {\n        this.goto(this.index - 1);\n    }\n    // рассчитать и выполнить смещение\n    move() {\n        // на сколько нужно сместить, чтобы нужный кадр попал в окно\n        const offset = 100 / this.length * this.index;\n        this.frameChain.style.transform = `translateX(-${offset}%)`;\n        this.dotButtons.forEach((dot)=>dot.classList.remove(\"active\"));\n        this.dotButtons[this.index].classList.add(\"active\");\n    }\n    // запустить автоматическую прокрутку\n    play() {\n        this.paused = setInterval(()=>this.next(), this.autoplayDelay);\n    }\n    // создать индикатор текущего слайда\n    dots() {\n        const ol = document.createElement(\"ol\");\n        const children = [];\n        ol.classList.add(\"slider__indicators\");\n        for(let i = 0; i < this.length; i++){\n            let li = document.createElement(\"li\");\n            if (i === 0) li.classList.add(\"active\");\n            ol.append(li);\n            children.push(li);\n        }\n        this.slider.prepend(ol);\n        return children;\n    }\n}\n\n//# sourceMappingURL=index.d70a90a4.js.map\n","class Slider {\n    constructor(slider, autoplay = true, autoplayDelay = 5000) {\n        // элемент div.slider\n        this.slider = slider;\n        // все кадры (слайды)\n        this.allFrames = slider.querySelectorAll('.slider__item');\n        // цепочка кадров\n        this.frameChain = slider.querySelector('.slider__slides');\n\n        this.index = 0; // индекс кадра, который сейчас в окне просмотра\n        this.length = this.allFrames.length; // сколько всего есть кадров\n        this.autoplay = autoplay; // включить автоматическую прокрутку?\n        this.autoplayDelay = autoplayDelay;\n        this.paused = null; // чтобы можно было выключать автопрокрутку\n\n        this.init(); // инициализация слайдера\n    }\n\n    init() {\n        this.dotButtons = this.dots(); // создать индикатор текущего кадра\n\n        // все кадры должны быть одной ширины, равной ширине окна просмотра;\n        // если кадров три, то ширина каждого кадра будет 100/3 = 33.33333%\n        // от ширины контейнера .slider__slides, то есть 900 пикселей\n        this.allFrames.forEach(\n            (frame) => (frame.style.width = 100 / this.length + '%')\n        );\n        // ширина цепочки кадров должна равна ширине всех кадров, то есть\n        // 900*3 = 2700 пикселей; но удобнее задать в процентах от родителя,\n        // если кадров три, то ширина контейнера кадров будет 100*3 = 300%\n        this.frameChain.style.width = 100 * this.length + '%';\n\n        // клики по кнопкам индикатора текущего кадра\n        this.dotButtons.forEach((dot) => {\n            dot.addEventListener('click', (event) => {\n                event.preventDefault();\n                const index = this.dotButtons.indexOf(event.target);\n\n                if (index === this.index) return;\n\n                this.goto(index);\n            });\n        });\n\n        if (this.autoplay) {\n            // включить автоматическую прокрутку?\n            this.play();\n            // когда мышь над слайдером — останавливаем автоматическую прокрутку\n            this.slider.addEventListener('mouseenter', () =>\n                clearInterval(this.paused)\n            );\n            // когда мышь покидает пределы слайдера — опять запускаем прокрутку\n            this.slider.addEventListener('mouseleave', () => this.play());\n        }\n    }\n\n    // перейти к кадру с индексом index\n    goto(index) {\n        // изменить текущий индекс...\n        if (index > this.length - 1) {\n            this.index = 0;\n        } else if (index < 0) {\n            this.index = this.length - 1;\n        } else {\n            this.index = index;\n        }\n        // ...и выполнить смещение\n        this.move();\n    }\n\n    // перейти к следующему кадру\n    next() {\n        this.goto(this.index + 1);\n    }\n\n    // перейти к предыдущему кадру\n    prev() {\n        this.goto(this.index - 1);\n    }\n\n    // рассчитать и выполнить смещение\n    move() {\n        // на сколько нужно сместить, чтобы нужный кадр попал в окно\n        const offset = (100 / this.length) * this.index;\n\n        this.frameChain.style.transform = `translateX(-${offset}%)`;\n        this.dotButtons.forEach((dot) => dot.classList.remove('active'));\n        this.dotButtons[this.index].classList.add('active');\n    }\n\n    // запустить автоматическую прокрутку\n    play() {\n        this.paused = setInterval(() => this.next(), this.autoplayDelay);\n    }\n\n    // создать индикатор текущего слайда\n    dots() {\n        const ol = document.createElement('ol');\n        const children = [];\n\n        ol.classList.add('slider__indicators');\n\n        for (let i = 0; i < this.length; i++) {\n            let li = document.createElement('li');\n\n            if (i === 0) li.classList.add('active');\n\n            ol.append(li);\n            children.push(li);\n        }\n\n        this.slider.prepend(ol);\n\n        return children;\n    }\n}\n"],"names":[],"version":3,"file":"index.d70a90a4.js.map"}