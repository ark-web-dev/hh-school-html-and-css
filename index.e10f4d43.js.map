{"mappings":"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","sources":["js/slider.js"],"sourcesContent":["class Slider {\n    constructor(slider, autoplay = true, autoplayDelay = 5000) {\n        // элемент div.slider\n        this.slider = slider;\n        // все кадры (слайды)\n        this.allFrames = slider.querySelectorAll('.slider__item');\n        // цепочка кадров\n        this.frameChain = slider.querySelector('.slider__slides');\n\n        this.index = 0; // индекс кадра, который сейчас в окне просмотра\n        this.length = this.allFrames.length; // сколько всего есть кадров\n        this.autoplay = autoplay; // включить автоматическую прокрутку?\n        this.autoplayDelay = autoplayDelay;\n        this.paused = null; // чтобы можно было выключать автопрокрутку\n\n        this.init(); // инициализация слайдера\n    }\n\n    init() {\n        this.dotButtons = this.dots(); // создать индикатор текущего кадра\n\n        // все кадры должны быть одной ширины, равной ширине окна просмотра;\n        // если кадров три, то ширина каждого кадра будет 100/3 = 33.33333%\n        // от ширины контейнера .slider__slides, то есть 900 пикселей\n        this.allFrames.forEach(\n            (frame) => (frame.style.width = 100 / this.length + '%')\n        );\n        // ширина цепочки кадров должна равна ширине всех кадров, то есть\n        // 900*3 = 2700 пикселей; но удобнее задать в процентах от родителя,\n        // если кадров три, то ширина контейнера кадров будет 100*3 = 300%\n        this.frameChain.style.width = 100 * this.length + '%';\n\n        // клики по кнопкам индикатора текущего кадра\n        this.dotButtons.forEach((dot) => {\n            dot.addEventListener('click', (event) => {\n                event.preventDefault();\n                const index = this.dotButtons.indexOf(event.target);\n\n                if (index === this.index) return;\n\n                this.goto(index);\n            });\n        });\n\n        if (this.autoplay) {\n            // включить автоматическую прокрутку?\n            this.play();\n            // когда мышь над слайдером — останавливаем автоматическую прокрутку\n            this.slider.addEventListener('mouseenter', () =>\n                clearInterval(this.paused)\n            );\n            // когда мышь покидает пределы слайдера — опять запускаем прокрутку\n            this.slider.addEventListener('mouseleave', () => this.play());\n        }\n    }\n\n    // перейти к кадру с индексом index\n    goto(index) {\n        // изменить текущий индекс...\n        if (index > this.length - 1) {\n            this.index = 0;\n        } else if (index < 0) {\n            this.index = this.length - 1;\n        } else {\n            this.index = index;\n        }\n        // ...и выполнить смещение\n        this.move();\n    }\n\n    // перейти к следующему кадру\n    next() {\n        this.goto(this.index + 1);\n    }\n\n    // перейти к предыдущему кадру\n    prev() {\n        this.goto(this.index - 1);\n    }\n\n    // рассчитать и выполнить смещение\n    move() {\n        // на сколько нужно сместить, чтобы нужный кадр попал в окно\n        const offset = (100 / this.length) * this.index;\n\n        this.frameChain.style.transform = `translateX(-${offset}%)`;\n        this.dotButtons.forEach((dot) => dot.classList.remove('active'));\n        this.dotButtons[this.index].classList.add('active');\n    }\n\n    // запустить автоматическую прокрутку\n    play() {\n        this.paused = setInterval(() => this.next(), this.autoplayDelay);\n    }\n\n    // создать индикатор текущего слайда\n    dots() {\n        const ol = document.createElement('ol');\n        const children = [];\n\n        ol.classList.add('slider__indicators');\n\n        for (let i = 0; i < this.length; i++) {\n            let li = document.createElement('li');\n\n            if (i === 0) li.classList.add('active');\n\n            ol.append(li);\n            children.push(li);\n        }\n\n        this.slider.prepend(ol);\n\n        return children;\n    }\n}\n"],"names":[],"version":3,"file":"index.e10f4d43.js.map","sourceRoot":"/__parcel_source_root/"}